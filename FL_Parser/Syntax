Объявление функции:
Fun_Def = function Ident(List<Ident, ','>) {
	List<Expr, ';'>;
}

List<Type, Del> = Type Del List<Type, Del> | Type Del

Вызов функции:
funCall = Ident(List<Expr, ','>)

read и write считаются встроенными функциями, поэтому их вызов тоже происходит со скобками

Выражения: 
	Expr = IF_Const | Math_Expr | funCall | Assignment 

Assigment = Ident = Expr
Math_Expr -- определены как на паре 
Считается, что отрицательные числа записаны в скобках(как в haskell, пример (-1))

IF_Const = if (Expr) {List<Expr, ';'>;}

Программа: 
Список объявлений функций  
	List<Fun_Def, '\n'>;

Больше примеров в файлике ./src/test/java/ParserTest.java

Добавленный синтаксический сахар:
операции ++ и --, в дереве i++ переходит в i=i+1
операции +=, -=, *=, /=, в дереве раскрываются i += j в i = i + j

Восстановление после ошибки: 
В дерево вместо ошибочного куска вставляется заглушка(Stub), парсинг продолжается дальше, считая что на предыдущем шаге было корректное выражение.  	